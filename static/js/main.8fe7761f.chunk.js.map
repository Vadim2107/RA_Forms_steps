{"version":3,"sources":["components/Form.js","components/Table.js","components/Steps.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","form","onSubmit","onChange","className","htmlFor","id","name","value","date","distance","type","onClick","times","icon","faTimesCircle","editor","faEdit","Table","items","onRemove","onEdit","convertDate","str","year","slice","month","day","sort","a","b","DateA","Date","getTime","map","item","Steps","useState","setForm","setItems","Fragment","evt","preventDefault","itemDate","find","Number","prevItems","nanoid","prevForm","target","checked","filter","o","e","alert","App","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8fe7761f.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Form(props) {\n    const {form, onSubmit, onChange} = props;\n    \n    return (\n        <form onSubmit={onSubmit}>        \n            <div className='form'>\n                <label htmlFor=\"date\">Дата (ДД.ММ.ГГГГ)</label>\n                <input id=\"date\" name=\"date\" value={form.date} onChange={onChange} />\n            </div>\n            <div className='form'>\n                <label htmlFor=\"distance\">Пройдено км</label>\n                <input id=\"distance\" name=\"distance\" value={form.distance} onChange={onChange} />\n            </div>\n            <button type=\"submit\" className=\"submit\" onClick={onSubmit}>ОК</button>\n        </form>\n    );\n}\n\nexport default Form;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nconst times = <FontAwesomeIcon icon={faTimesCircle} />;\nconst editor = <FontAwesomeIcon icon={faEdit} />;\n\nfunction Table(props) {\n    const {items, onRemove, onEdit} = props;\n\n    const convertDate = (str) => {\n        const year = str.slice(6);\n        const month = str.slice(2, 6);\n        const day = str.slice(0, 2);        \n        str = year + month + day;\n        return str;\n    }\n\n    items.sort((a, b) => {\n        const DateA = new Date(convertDate(a.date)).getTime();\n        const DateB = new Date(convertDate(b.date)).getTime();\n        return (DateB - DateA);\n    })\n\n    return (\n        <div>\n            <table className=\"table\">\n                <thead className=\"table-head\">\n                    <tr>\n                        <th>Дата (ДД.ММ.ГГГГ)</th>\n                        <th>Пройдено км</th>\n                        <th>Действия</th>\n                    </tr>\n                </thead>\n                <tbody className=\"table-steps\">\n                    {items.map(item => \n                        <tr className=\"item\" key={item.id}>\n                            <td>{item.date}</td>\n                            <td>{item.distance}</td>\n                            <td>\n                                <button className=\"item-action\" onClick={() => onEdit(item.id)}>{editor}</button>\n                                <button className=\"item-action\" onClick={() => onRemove(item.id)}>{times}</button>\n                            </td>\n                        </tr>\n                    )}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default Table;\n","import React, { useState } from 'react';\nimport Form from './Form';\nimport Table from './Table';\nimport { nanoid } from 'nanoid';\n\nfunction Steps() {\n\n    const [form, setForm] = useState({\n        date: \"\",\n        distance: \"\",\n    });\n\n    const [items, setItems] = useState([])\n\n    const onSubmit = evt => {\n        evt.preventDefault();\n        \n        const itemDate = items.find(item => item.date === form.date);\n        if (itemDate) {            \n                itemDate.distance = Number(itemDate.distance) + Number(form.distance);\n        } else {\n            setItems(prevItems => ([...prevItems, {\n                date: form.date,\n                distance: form.distance,\n                id: nanoid()\n            }]));\n        }\n\n        setForm(prevForm => ({...prevForm, date: \"\", distance:\"\"}));\n    }\n\n    const onChange = ({target}) => {\n        const name = target.name;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        setForm(prevForm => ({...prevForm, [name]: value}));\n    }\n\n    const onEdit = (e) => {\n        alert('Задача со звездочкой!!!');\n    }\n\n    const onRemove = (id) => {\n        setItems(prevItems => prevItems.filter(o => o.id !== id));\n    }\n\n    return (\n        <React.Fragment>\n            <Form\n                form = {form}\n                onSubmit = {onSubmit}\n                onChange = {onChange} />\n            <Table\n                items = {items}\n                onRemove = {onRemove}\n                onEdit = {onEdit} />\n        </React.Fragment>\n    );\n}\n\nexport default Steps;\n","import React from 'react';\nimport './App.css';\nimport Steps from './components/Steps';\n\nclass App extends React.Component {\n  \n  render() {\n    \n    return (\n      <React.Fragment>\n        <Steps />        \n      </React.Fragment>                \n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}